name: build
on:
  workflow_run:
    workflows: [ci]
    types: [completed]
    branches: [main, release]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  info:
    name: Collect information
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' && github.event.repository.full_name == 'reearth/reearth-web'
    outputs:
      tag: ${{ steps.info.outputs.tag }}
      branch: ${{ steps.info.outputs.branch }}
      name: ${{ steps.info.outputs.name }}
    steps:
      - uses: actions/checkout@v3
      - name: Fetch tags
        run: git fetch --prune --unshallow --tags
      - name: Get info
        id: info
        # The tag name should be retrieved lazily, as tagging may be delayed.
        run: |
          TAG=$(git tag --points-at HEAD)
          if [[ ! -z "$TAG" ]]; then
            echo "::set-output name=tag::$TAG"
          fi
          BRANCH=$(git branch --show-current)
          echo "::set-output name=branch::$BRANCH"
          if [[ "$BRANCH" = "release" ]]; then
            echo "::set-output name=name::rc"
          else
            echo "::set-output name=name::nightly"
          fi
      - name: Show info
        env:
          tag: ${{ steps.info.outputs.tag }}
          BRANCH: ${{ steps.info.outputs.branch }}
          NAME: ${{ steps.info.outputs.name }}
        run: echo "tag=$tag, branch=$BRANCH, name=$NAME"
  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - info
    if: needs.info.outputs.branch == 'main' || needs.info.outputs.branch == 'release'
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Build
        run: yarn build
      - name: Pack
        run: mv build reearth-web && tar -zcvf reearth-web.tar.gz reearth-web
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: reearth-web.tar.gz
  release_nightly:
    name: Release nightly/rc
    runs-on: ubuntu-latest
    needs:
      - info
      - build
    if: "!needs.info.outputs.tag"
    env:
      ARTIFACT: reearth-web_${{ steps.info.outputs.name }}.tar.gz
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Rename artifact
        run: mv reearth-web.tar.gz $ARTIFACT
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ env.ARTIFACT }}
          artifactContentType: application/gzip
          commit: ${{ github.sha }}
          name: ${{ steps.info.outputs.name }}
          tag: ${{ steps.info.outputs.name }}
          body: ${{ github.sha }}
          prerelease: true
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - info
    if: needs.info.outputs.branch == 'release' && needs.info.outputs.tag
    env:
      ARTIFACT: reearth-web_${{ needs.info.outputs.tag }}.tar.gz
    steps:
      - name: Download latest changelog
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: release.yml
          name: changelog-${{ needs.info.outputs.tag }}
      - name: Download latest artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          commit: ${{ github.sha }}
          name: build
      - name: Rename artifact
        run: mv reearth-web.tar.gz $ARTIFACT
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.ARTIFACT }}
          artifactContentType: application/gzip
          commit: ${{ github.sha }}
          name: ${{ needs.info.outputs.tag }}
          tag: ${{ needs.info.outputs.tag }}
          bodyFile: CHANGELOG_latest.md
  slack-notification-nightly:
    if: failure()
    name: Slack Notification
    needs:
      - release_nightly
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: Gamesight/slack-workflow-status@master
        if: always()
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
  slack-notification-release:
    if: failure()
    name: Slack Notification
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: Gamesight/slack-workflow-status@master
        if: always()
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
