name: Release
on:
  workflow_dispatch:
    inputs:
      custom_tag:
        required: false
        description: Specify version only when you want to increment the minor and major version (e.g. 1.1.0)
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up git config
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GPT }}
      - name: Bump tag version
        id: tag
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.custom_tag }}
          dry_run: true
      - name: Update version of package.json
        env:
          TAG: ${{ steps.tag.outputs.new_tag }}
        run: |
          yarn version --no-git-tag-version --new-version ${TAG/v}
      - name: Prepare git-cliff
        run: touch CHANGELOG.md
      - name: Generate changelog
        uses: orhun/git-cliff-action@v1
        env:
          OUTPUT: CHANGELOG.md
        with:
          config: .github/cliff.toml
          args: --verbose --tag ${{ steps.tag.outputs.new_tag }}
      - name: Format changelogs
        env:
          URL: ${{ github.event.repository.html_url }}
        run: |
          URL=${URL//\//\\\/}
          sed -i -E 's/<!-- [0-9]+ -->//g; s/\(#([0-9]+)\)/([#\1]('"$URL"'\/pull\/\1))/g; s/`([a-zA-Z0-9]+)`/[`\1`]('"$URL"'\/commit\/\1)/g' CHANGELOG*.md
      - name: Generate CHANGELOG_latest.md
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require("fs");
            const changelog = fs.readFileSync("CHANGELOG.md", "utf8");
            const lines = changelog.split("\n");
            const h = lines
              .map((l, i) => [l, i])
              .filter(l => l[0].startsWith("## "))
              .map(l => l[1])
              .slice(0, 2);
            if (!h.length) throw new Error("failed to get the changelog of the latest version");
            const m = lines.slice(h[0] + 1, h[1]).join("\n");
            fs.writeFileSync("CHANGELOG_latest.md", m);
      - name: Upload latest changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog-${{ steps.tag.outputs.new_tag }}
          path: CHANGELOG_latest.md
      - name: Commit & push
        env:
          TAG: ${{ steps.tag.outputs.new_tag }}
        run: |
          rm CHANGELOG_latest.md
          git add CHANGELOG.md
          git commit -am "$TAG"
          git tag $TAG
          git push
          git push --tags
