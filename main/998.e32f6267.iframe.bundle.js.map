{"version":3,"file":"998.e32f6267.iframe.bundle.js","mappings":"AACA","sources":["webpack://reearth-web/./node_modules/react-popper/lib/esm/Manager.js","webpack://reearth-web/./node_modules/react-popper/lib/esm/Popper.js","webpack://reearth-web/./node_modules/react-popper/lib/esm/Reference.js","webpack://reearth-web/./node_modules/react-popper-tooltip/dist/esm/react-popper-tooltip.js","webpack://reearth-web/./node_modules/@storybook/builder-webpack5/node_modules/@storybook/components/dist/esm/tooltip/Tooltip.js","webpack://reearth-web/./node_modules/@storybook/builder-webpack5/node_modules/@storybook/components/dist/esm/tooltip/WithTooltip.js"],"sourcesContent":["import * as React from 'react';\nexport var ManagerReferenceNodeContext = React.createContext();\nexport var ManagerReferenceNodeSetterContext = React.createContext();\nexport function Manager(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(null),\n      referenceNode = _React$useState[0],\n      setReferenceNode = _React$useState[1];\n\n  var hasUnmounted = React.useRef(false);\n  React.useEffect(function () {\n    return function () {\n      hasUnmounted.current = true;\n    };\n  }, []);\n  var handleSetReferenceNode = React.useCallback(function (node) {\n    if (!hasUnmounted.current) {\n      setReferenceNode(node);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(ManagerReferenceNodeContext.Provider, {\n    value: referenceNode\n  }, /*#__PURE__*/React.createElement(ManagerReferenceNodeSetterContext.Provider, {\n    value: handleSetReferenceNode\n  }, children));\n}","import * as React from 'react';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef } from './utils';\nimport { usePopper } from './usePopper';\n\nvar NOOP = function NOOP() {\n  return void 0;\n};\n\nvar NOOP_PROMISE = function NOOP_PROMISE() {\n  return Promise.resolve(null);\n};\n\nvar EMPTY_MODIFIERS = [];\nexport function Popper(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,\n      referenceElement = _ref.referenceElement,\n      onFirstUpdate = _ref.onFirstUpdate,\n      innerRef = _ref.innerRef,\n      children = _ref.children;\n  var referenceNode = React.useContext(ManagerReferenceNodeContext);\n\n  var _React$useState = React.useState(null),\n      popperElement = _React$useState[0],\n      setPopperElement = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowElement = _React$useState2[0],\n      setArrowElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    setRef(innerRef, popperElement);\n  }, [innerRef, popperElement]);\n  var options = React.useMemo(function () {\n    return {\n      placement: placement,\n      strategy: strategy,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: [].concat(modifiers, [{\n        name: 'arrow',\n        enabled: arrowElement != null,\n        options: {\n          element: arrowElement\n        }\n      }])\n    };\n  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);\n\n  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),\n      state = _usePopper.state,\n      styles = _usePopper.styles,\n      forceUpdate = _usePopper.forceUpdate,\n      update = _usePopper.update;\n\n  var childrenProps = React.useMemo(function () {\n    return {\n      ref: setPopperElement,\n      style: styles.popper,\n      placement: state ? state.placement : placement,\n      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,\n      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,\n      arrowProps: {\n        style: styles.arrow,\n        ref: setArrowElement\n      },\n      forceUpdate: forceUpdate || NOOP,\n      update: update || NOOP_PROMISE\n    };\n  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);\n  return unwrapArray(children)(childrenProps);\n}","import * as React from 'react';\nimport warning from 'warning';\nimport { ManagerReferenceNodeSetterContext } from './Manager';\nimport { safeInvoke, unwrapArray, setRef } from './utils';\nexport function Reference(_ref) {\n  var children = _ref.children,\n      innerRef = _ref.innerRef;\n  var setReferenceNode = React.useContext(ManagerReferenceNodeSetterContext);\n  var refHandler = React.useCallback(function (node) {\n    setRef(innerRef, node);\n    safeInvoke(setReferenceNode, node);\n  }, [innerRef, setReferenceNode]); // ran on unmount\n\n  React.useEffect(function () {\n    return function () {\n      return setRef(innerRef, null);\n    };\n  });\n  React.useEffect(function () {\n    warning(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n  }, [setReferenceNode]);\n  return unwrapArray(children)({\n    ref: refHandler\n  });\n}","import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Popper, Manager, Reference } from 'react-popper';\n\nvar TooltipContext = /*#__PURE__*/React.createContext({}); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar callAll = function callAll() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return fns.forEach(function (fn) {\n      return fn && fn.apply(void 0, args);\n    });\n  };\n};\nvar noop = function noop() {// do nothing\n};\nvar canUseDOM = function canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n};\nvar setRef = function setRef(ref, node) {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n\nvar Tooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tooltip, _Component);\n\n  function Tooltip() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.observer = void 0;\n    _this.tooltipRef = void 0;\n\n    _this.handleOutsideClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideClickHandler = _this.context.parentOutsideClickHandler;\n        var _this$props = _this.props,\n            hideTooltip = _this$props.hideTooltip,\n            clearScheduled = _this$props.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideClickHandler) {\n          parentOutsideClickHandler(event);\n        }\n      }\n    };\n\n    _this.handleOutsideRightClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideRightClickHandler = _this.context.parentOutsideRightClickHandler;\n        var _this$props2 = _this.props,\n            hideTooltip = _this$props2.hideTooltip,\n            clearScheduled = _this$props2.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideRightClickHandler) {\n          parentOutsideRightClickHandler(event);\n        }\n      }\n    };\n\n    _this.addOutsideClickHandler = function () {\n      document.body.addEventListener('touchend', _this.handleOutsideClick);\n      document.body.addEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.removeOutsideClickHandler = function () {\n      document.body.removeEventListener('touchend', _this.handleOutsideClick);\n      document.body.removeEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.addOutsideRightClickHandler = function () {\n      return document.body.addEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.removeOutsideRightClickHandler = function () {\n      return document.body.removeEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.getTooltipRef = function (node) {\n      _this.tooltipRef = node;\n      setRef(_this.props.innerRef, node);\n    };\n\n    _this.getArrowProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        style: _extends({}, props.style, _this.props.arrowProps.style)\n      });\n    };\n\n    _this.getTooltipProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, _this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(_this.props.clearScheduled, props.onMouseEnter),\n        onMouseLeave: callAll(_this.props.hideTooltip, props.onMouseLeave)\n      }, {\n        style: _extends({}, props.style, _this.props.style)\n      });\n    };\n\n    _this.contextValue = {\n      isParentNoneTriggered: _this.props.trigger === 'none',\n      addParentOutsideClickHandler: _this.addOutsideClickHandler,\n      addParentOutsideRightClickHandler: _this.addOutsideRightClickHandler,\n      parentOutsideClickHandler: _this.handleOutsideClick,\n      parentOutsideRightClickHandler: _this.handleOutsideRightClick,\n      removeParentOutsideClickHandler: _this.removeOutsideClickHandler,\n      removeParentOutsideRightClickHandler: _this.removeOutsideRightClickHandler\n    };\n    return _this;\n  }\n\n  var _proto = Tooltip.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var observer = this.observer = new MutationObserver(function () {\n      _this2.props.update();\n    });\n    observer.observe(this.tooltipRef, this.props.mutationObserverOptions);\n\n    if (this.isTriggeredBy('hover') || this.isTriggeredBy('click') || this.isTriggeredBy('right-click')) {\n      var _this$context = this.context,\n          removeParentOutsideClickHandler = _this$context.removeParentOutsideClickHandler,\n          removeParentOutsideRightClickHandler = _this$context.removeParentOutsideRightClickHandler;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.closeOnReferenceHidden && this.props.isReferenceHidden) {\n      this.props.hideTooltip();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (this.isTriggeredBy('hover') || this.isTriggeredBy('click') || this.isTriggeredBy('right-click')) {\n      var _this$context2 = this.context,\n          isParentNoneTriggered = _this$context2.isParentNoneTriggered,\n          addParentOutsideClickHandler = _this$context2.addParentOutsideClickHandler,\n          addParentOutsideRightClickHandler = _this$context2.addParentOutsideRightClickHandler;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        arrowProps = _this$props3.arrowProps,\n        placement = _this$props3.placement,\n        tooltip = _this$props3.tooltip;\n    return /*#__PURE__*/React.createElement(TooltipContext.Provider, {\n      value: this.contextValue\n    }, tooltip({\n      arrowRef: arrowProps.ref,\n      getArrowProps: this.getArrowProps,\n      getTooltipProps: this.getTooltipProps,\n      placement: placement,\n      tooltipRef: this.getTooltipRef\n    }));\n  };\n\n  _proto.isTriggeredBy = function isTriggeredBy(event) {\n    var trigger = this.props.trigger;\n    return trigger === event || Array.isArray(trigger) && trigger.includes(event);\n  };\n\n  return Tooltip;\n}(Component);\n\nTooltip.contextType = TooltipContext;\n\nvar DEFAULT_MUTATION_OBSERVER_CONFIG = {\n  childList: true,\n  subtree: true\n};\n\nvar TooltipTrigger = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TooltipTrigger, _Component);\n\n  function TooltipTrigger() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      tooltipShown: _this.props.defaultTooltipShown\n    };\n    _this.hideTimeout = void 0;\n    _this.showTimeout = void 0;\n    _this.popperOffset = void 0;\n\n    _this.setTooltipState = function (state) {\n      var cb = function cb() {\n        return _this.props.onVisibilityChange(state.tooltipShown);\n      };\n\n      _this.isControlled() ? cb() : _this.setState(state, cb);\n    };\n\n    _this.clearScheduled = function () {\n      clearTimeout(_this.hideTimeout);\n      clearTimeout(_this.showTimeout);\n    };\n\n    _this.showTooltip = function (_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n\n      _this.clearScheduled();\n\n      var state = {\n        tooltipShown: true\n      };\n\n      if (_this.props.followCursor) {\n        state = _extends({}, state, {\n          pageX: pageX,\n          pageY: pageY\n        });\n      }\n\n      _this.showTimeout = window.setTimeout(function () {\n        return _this.setTooltipState(state);\n      }, _this.props.delayShow);\n    };\n\n    _this.hideTooltip = function () {\n      _this.clearScheduled();\n\n      _this.hideTimeout = window.setTimeout(function () {\n        return _this.setTooltipState({\n          tooltipShown: false\n        });\n      }, _this.props.delayHide);\n    };\n\n    _this.toggleTooltip = function (_ref2) {\n      var pageX = _ref2.pageX,\n          pageY = _ref2.pageY;\n      var action = _this.getState() ? 'hideTooltip' : 'showTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.clickToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.contextMenuToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.getTriggerProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, _this.isTriggeredBy('click') && {\n        onClick: callAll(_this.clickToggle, props.onClick),\n        onTouchEnd: callAll(_this.clickToggle, props.onTouchEnd)\n      }, _this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(_this.contextMenuToggle, props.onContextMenu)\n      }, _this.isTriggeredBy('hover') && _extends({\n        onMouseEnter: callAll(_this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(_this.hideTooltip, props.onMouseLeave)\n      }, _this.props.followCursor && {\n        onMouseMove: callAll(_this.showTooltip, props.onMouseMove)\n      }), _this.isTriggeredBy('focus') && {\n        onFocus: callAll(_this.showTooltip, props.onFocus),\n        onBlur: callAll(_this.hideTooltip, props.onBlur)\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = TooltipTrigger.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearScheduled();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        tooltip = _this$props.tooltip,\n        placement = _this$props.placement,\n        trigger = _this$props.trigger,\n        getTriggerRef = _this$props.getTriggerRef,\n        modifiers = _this$props.modifiers,\n        closeOnReferenceHidden = _this$props.closeOnReferenceHidden,\n        usePortal = _this$props.usePortal,\n        portalContainer = _this$props.portalContainer,\n        followCursor = _this$props.followCursor,\n        getTooltipRef = _this$props.getTooltipRef,\n        mutationObserverOptions = _this$props.mutationObserverOptions,\n        restProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"tooltip\", \"placement\", \"trigger\", \"getTriggerRef\", \"modifiers\", \"closeOnReferenceHidden\", \"usePortal\", \"portalContainer\", \"followCursor\", \"getTooltipRef\", \"mutationObserverOptions\"]);\n\n    var popper = /*#__PURE__*/React.createElement(Popper, _extends({\n      innerRef: getTooltipRef,\n      placement: placement,\n      modifiers: [{\n        name: 'followCursor',\n        enabled: followCursor,\n        phase: 'main',\n        fn: function fn(data) {\n          _this2.popperOffset = data.state.rects.popper;\n        }\n      }].concat(modifiers)\n    }, restProps), function (_ref3) {\n      var ref = _ref3.ref,\n          style = _ref3.style,\n          placement = _ref3.placement,\n          arrowProps = _ref3.arrowProps,\n          isReferenceHidden = _ref3.isReferenceHidden,\n          update = _ref3.update;\n\n      if (followCursor && _this2.popperOffset) {\n        var _this2$state = _this2.state,\n            pageX = _this2$state.pageX,\n            pageY = _this2$state.pageY;\n        var _this2$popperOffset = _this2.popperOffset,\n            width = _this2$popperOffset.width,\n            height = _this2$popperOffset.height;\n        var x = pageX + width > window.pageXOffset + document.body.offsetWidth ? pageX - width : pageX;\n        var y = pageY + height > window.pageYOffset + document.body.offsetHeight ? pageY - height : pageY;\n        style.transform = \"translate3d(\" + x + \"px, \" + y + \"px, 0\";\n      }\n\n      return /*#__PURE__*/React.createElement(Tooltip, _extends({\n        arrowProps: arrowProps,\n        closeOnReferenceHidden: closeOnReferenceHidden,\n        isReferenceHidden: isReferenceHidden,\n        placement: placement,\n        update: update,\n        style: style,\n        tooltip: tooltip,\n        trigger: trigger,\n        mutationObserverOptions: mutationObserverOptions\n      }, {\n        clearScheduled: _this2.clearScheduled,\n        hideTooltip: _this2.hideTooltip,\n        innerRef: ref\n      }));\n    });\n    return /*#__PURE__*/React.createElement(Manager, null, /*#__PURE__*/React.createElement(Reference, {\n      innerRef: getTriggerRef\n    }, function (_ref4) {\n      var ref = _ref4.ref;\n      return children({\n        getTriggerProps: _this2.getTriggerProps,\n        triggerRef: ref\n      });\n    }), this.getState() && (usePortal ? /*#__PURE__*/createPortal(popper, portalContainer) : popper));\n  };\n\n  _proto.isControlled = function isControlled() {\n    return this.props.tooltipShown !== undefined;\n  };\n\n  _proto.getState = function getState() {\n    return this.isControlled() ? this.props.tooltipShown : this.state.tooltipShown;\n  };\n\n  _proto.isTriggeredBy = function isTriggeredBy(event) {\n    var trigger = this.props.trigger;\n    return trigger === event || Array.isArray(trigger) && trigger.includes(event);\n  };\n\n  return TooltipTrigger;\n}(Component);\n\nTooltipTrigger.defaultProps = {\n  closeOnReferenceHidden: true,\n  defaultTooltipShown: false,\n  delayHide: 0,\n  delayShow: 0,\n  followCursor: false,\n  onVisibilityChange: noop,\n  placement: 'right',\n  portalContainer: canUseDOM() ? document.body : null,\n  trigger: 'hover',\n  usePortal: canUseDOM(),\n  mutationObserverOptions: DEFAULT_MUTATION_OBSERVER_CONFIG,\n  modifiers: []\n};\n\nexport default TooltipTrigger;\n//# sourceMappingURL=react-popper-tooltip.js.map\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport React from 'react';\nimport memoize from 'memoizerific';\nimport { styled, lighten, darken } from '@storybook/theming';\nvar match = memoize(1000)(function (requests, actual, value) {\n  var fallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  return actual.split('-')[0] === requests ? value : fallback;\n});\nvar ArrowSpacing = 8;\nvar Arrow = styled.div({\n  position: 'absolute',\n  borderStyle: 'solid'\n}, function (_ref) {\n  var placement = _ref.placement;\n  var x = 0;\n  var y = 0;\n\n  switch (true) {\n    case placement.startsWith('left') || placement.startsWith('right'):\n      {\n        y = 8;\n        break;\n      }\n\n    case placement.startsWith('top') || placement.startsWith('bottom'):\n      {\n        x = 8;\n        break;\n      }\n\n    default:\n      {//\n      }\n  }\n\n  var transform = \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0px)\");\n  return {\n    transform: transform\n  };\n}, function (_ref2) {\n  var theme = _ref2.theme,\n      color = _ref2.color,\n      placement = _ref2.placement;\n  return {\n    bottom: \"\".concat(match('top', placement, ArrowSpacing * -1, 'auto'), \"px\"),\n    top: \"\".concat(match('bottom', placement, ArrowSpacing * -1, 'auto'), \"px\"),\n    right: \"\".concat(match('left', placement, ArrowSpacing * -1, 'auto'), \"px\"),\n    left: \"\".concat(match('right', placement, ArrowSpacing * -1, 'auto'), \"px\"),\n    borderBottomWidth: \"\".concat(match('top', placement, '0', ArrowSpacing), \"px\"),\n    borderTopWidth: \"\".concat(match('bottom', placement, '0', ArrowSpacing), \"px\"),\n    borderRightWidth: \"\".concat(match('left', placement, '0', ArrowSpacing), \"px\"),\n    borderLeftWidth: \"\".concat(match('right', placement, '0', ArrowSpacing), \"px\"),\n    borderTopColor: match('top', placement, theme.color[color] || color || theme.base === 'light' ? lighten(theme.background.app) : darken(theme.background.app), 'transparent'),\n    borderBottomColor: match('bottom', placement, theme.color[color] || color || theme.base === 'light' ? lighten(theme.background.app) : darken(theme.background.app), 'transparent'),\n    borderLeftColor: match('left', placement, theme.color[color] || color || theme.base === 'light' ? lighten(theme.background.app) : darken(theme.background.app), 'transparent'),\n    borderRightColor: match('right', placement, theme.color[color] || color || theme.base === 'light' ? lighten(theme.background.app) : darken(theme.background.app), 'transparent')\n  };\n});\nvar Wrapper = styled.div(function (_ref3) {\n  var hidden = _ref3.hidden;\n  return {\n    display: hidden ? 'none' : 'inline-block',\n    zIndex: 2147483647\n  };\n}, function (_ref4) {\n  var theme = _ref4.theme,\n      color = _ref4.color,\n      hasChrome = _ref4.hasChrome;\n  return hasChrome ? {\n    background: theme.color[color] || color || theme.base === 'light' ? lighten(theme.background.app) : darken(theme.background.app),\n    filter: \"\\n            drop-shadow(0px 5px 5px rgba(0,0,0,0.05))\\n            drop-shadow(0 1px 3px rgba(0,0,0,0.1))\\n          \",\n    borderRadius: theme.appBorderRadius * 2,\n    fontSize: theme.typography.size.s1\n  } : {};\n});\nexport var Tooltip = function Tooltip(_ref5) {\n  var placement = _ref5.placement,\n      hasChrome = _ref5.hasChrome,\n      children = _ref5.children,\n      arrowProps = _ref5.arrowProps,\n      tooltipRef = _ref5.tooltipRef,\n      arrowRef = _ref5.arrowRef,\n      color = _ref5.color,\n      props = _objectWithoutProperties(_ref5, [\"placement\", \"hasChrome\", \"children\", \"arrowProps\", \"tooltipRef\", \"arrowRef\", \"color\"]);\n\n  return /*#__PURE__*/React.createElement(Wrapper, _extends({\n    hasChrome: hasChrome,\n    placement: placement,\n    ref: tooltipRef\n  }, props, {\n    color: color\n  }), hasChrome && /*#__PURE__*/React.createElement(Arrow, _extends({\n    placement: placement,\n    ref: arrowRef\n  }, arrowProps, {\n    color: color\n  })), children);\n};\nTooltip.displayName = \"Tooltip\";\nTooltip.defaultProps = {\n  color: undefined,\n  arrowRef: undefined,\n  tooltipRef: undefined,\n  hasChrome: true,\n  placement: 'top',\n  arrowProps: {}\n};","import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.freeze.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.function.name.js\";\n\nvar _templateObject, _templateObject2;\n\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { styled } from '@storybook/theming';\nimport global from 'global';\nimport TooltipTrigger from 'react-popper-tooltip';\nimport { Tooltip } from './Tooltip';\nvar document = global.document; // A target that doesn't speak popper\n\nvar TargetContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  cursor: \", \";\\n\"])), function (props) {\n  return props.mode === 'hover' ? 'default' : 'pointer';\n});\nvar TargetSvgContainer = styled.g(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  cursor: \", \";\\n\"])), function (props) {\n  return props.mode === 'hover' ? 'default' : 'pointer';\n});\n\n// Pure, does not bind to the body\nvar WithTooltipPure = function WithTooltipPure(_ref) {\n  var svg = _ref.svg,\n      trigger = _ref.trigger,\n      closeOnClick = _ref.closeOnClick,\n      placement = _ref.placement,\n      modifiers = _ref.modifiers,\n      hasChrome = _ref.hasChrome,\n      _tooltip = _ref.tooltip,\n      children = _ref.children,\n      tooltipShown = _ref.tooltipShown,\n      onVisibilityChange = _ref.onVisibilityChange,\n      props = _objectWithoutProperties(_ref, [\"svg\", \"trigger\", \"closeOnClick\", \"placement\", \"modifiers\", \"hasChrome\", \"tooltip\", \"children\", \"tooltipShown\", \"onVisibilityChange\"]);\n\n  var Container = svg ? TargetSvgContainer : TargetContainer;\n  return /*#__PURE__*/React.createElement(TooltipTrigger, {\n    placement: placement,\n    trigger: trigger,\n    modifiers: modifiers,\n    tooltipShown: tooltipShown,\n    onVisibilityChange: onVisibilityChange,\n    tooltip: function tooltip(_ref2) {\n      var getTooltipProps = _ref2.getTooltipProps,\n          getArrowProps = _ref2.getArrowProps,\n          tooltipRef = _ref2.tooltipRef,\n          arrowRef = _ref2.arrowRef,\n          tooltipPlacement = _ref2.placement;\n      return /*#__PURE__*/React.createElement(Tooltip, _extends({\n        hasChrome: hasChrome,\n        placement: tooltipPlacement,\n        tooltipRef: tooltipRef,\n        arrowRef: arrowRef,\n        arrowProps: getArrowProps()\n      }, getTooltipProps()), typeof _tooltip === 'function' ? _tooltip({\n        onHide: function onHide() {\n          return onVisibilityChange(false);\n        }\n      }) : _tooltip);\n    }\n  }, function (_ref3) {\n    var getTriggerProps = _ref3.getTriggerProps,\n        triggerRef = _ref3.triggerRef;\n    return (\n      /*#__PURE__*/\n      // @ts-ignore\n      React.createElement(Container, _extends({\n        ref: triggerRef\n      }, getTriggerProps(), props), children)\n    );\n  });\n};\n\nWithTooltipPure.displayName = \"WithTooltipPure\";\nWithTooltipPure.defaultProps = {\n  svg: false,\n  trigger: 'hover',\n  closeOnClick: false,\n  placement: 'top',\n  modifiers: [{\n    name: 'preventOverflow',\n    options: {\n      padding: 8\n    }\n  }, {\n    name: 'offset',\n    options: {\n      offset: [8, 8]\n    }\n  }, {\n    name: 'arrow',\n    options: {\n      padding: 8\n    }\n  }],\n  hasChrome: true,\n  tooltipShown: false\n};\n\nvar WithToolTipState = function WithToolTipState(_ref4) {\n  var startOpen = _ref4.startOpen,\n      onChange = _ref4.onVisibilityChange,\n      rest = _objectWithoutProperties(_ref4, [\"startOpen\", \"onVisibilityChange\"]);\n\n  var _useState = useState(startOpen || false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltipShown = _useState2[0],\n      setTooltipShown = _useState2[1];\n\n  var onVisibilityChange = useCallback(function (visibility) {\n    if (onChange && onChange(visibility) === false) return;\n    setTooltipShown(visibility);\n  }, [onChange]);\n  useEffect(function () {\n    var hide = function hide() {\n      return onVisibilityChange(false);\n    };\n\n    document.addEventListener('keydown', hide, false); // Find all iframes on the screen and bind to clicks inside them (waiting until the iframe is ready)\n\n    var iframes = Array.from(document.getElementsByTagName('iframe'));\n    var unbinders = [];\n    iframes.forEach(function (iframe) {\n      var bind = function bind() {\n        try {\n          if (iframe.contentWindow.document) {\n            iframe.contentWindow.document.addEventListener('click', hide);\n            unbinders.push(function () {\n              try {\n                iframe.contentWindow.document.removeEventListener('click', hide);\n              } catch (e) {// logger.debug('Removing a click listener from iframe failed: ', e);\n              }\n            });\n          }\n        } catch (e) {// logger.debug('Adding a click listener to iframe failed: ', e);\n        }\n      };\n\n      bind(); // I don't know how to find out if it's already loaded so I potentially will bind twice\n\n      iframe.addEventListener('load', bind);\n      unbinders.push(function () {\n        iframe.removeEventListener('load', bind);\n      });\n    });\n    return function () {\n      document.removeEventListener('keydown', hide);\n      unbinders.forEach(function (unbind) {\n        unbind();\n      });\n    };\n  });\n  return /*#__PURE__*/React.createElement(WithTooltipPure, _extends({}, rest, {\n    tooltipShown: tooltipShown,\n    onVisibilityChange: onVisibilityChange\n  }));\n};\n\nWithToolTipState.displayName = \"WithToolTipState\";\nexport { WithTooltipPure, WithToolTipState, WithToolTipState as WithTooltip };"],"names":["ManagerReferenceNodeContext","ManagerReferenceNodeSetterContext","Manager","_ref","children","_React$useState","referenceNode","setReferenceNode","hasUnmounted","current","handleSetReferenceNode","node","Provider","value","NOOP","NOOP_PROMISE","Promise","resolve","EMPTY_MODIFIERS","Popper","_ref$placement","placement","_ref$strategy","strategy","_ref$modifiers","modifiers","referenceElement","onFirstUpdate","innerRef","popperElement","setPopperElement","_React$useState2","arrowElement","setArrowElement","options","concat","name","enabled","element","_usePopper","usePopper","state","styles","forceUpdate","update","childrenProps","ref","style","popper","hasPopperEscaped","modifiersData","hide","isReferenceHidden","arrowProps","arrow","Reference","refHandler","Boolean","TooltipContext","callAll","_len","arguments","length","fns","Array","_key","_len2","args","_key2","forEach","fn","apply","canUseDOM","window","document","createElement","setRef","Tooltip","_Component","_this","call","this","observer","tooltipRef","handleOutsideClick","event","contains","target","parentOutsideClickHandler","context","_this$props","props","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","_this$props2","addOutsideClickHandler","body","addEventListener","removeOutsideClickHandler","removeEventListener","addOutsideRightClickHandler","removeOutsideRightClickHandler","getTooltipRef","getArrowProps","getTooltipProps","isTriggeredBy","onMouseEnter","onMouseLeave","contextValue","isParentNoneTriggered","trigger","addParentOutsideClickHandler","addParentOutsideRightClickHandler","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","_proto","prototype","componentDidMount","_this2","MutationObserver","observe","mutationObserverOptions","_this$context","componentDidUpdate","closeOnReferenceHidden","componentWillUnmount","disconnect","_this$context2","undefined","render","_this$props3","tooltip","arrowRef","isArray","includes","Component","contextType","TooltipTrigger","tooltipShown","defaultTooltipShown","hideTimeout","showTimeout","popperOffset","setTooltipState","cb","onVisibilityChange","isControlled","setState","clearTimeout","showTooltip","pageX","pageY","followCursor","setTimeout","delayShow","delayHide","toggleTooltip","_ref2","action","getState","clickToggle","preventDefault","contextMenuToggle","getTriggerProps","onClick","onTouchEnd","onContextMenu","onMouseMove","onFocus","onBlur","getTriggerRef","usePortal","portalContainer","restProps","phase","data","rects","_ref3","_this2$state","_this2$popperOffset","width","height","x","pageXOffset","offsetWidth","y","pageYOffset","offsetHeight","transform","_ref4","triggerRef","createPortal","defaultProps","noop","childList","subtree","_extends","Object","assign","i","source","key","hasOwnProperty","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_templateObject","_templateObject2","match","requests","actual","fallback","split","Arrow","position","borderStyle","startsWith","theme","color","bottom","ArrowSpacing","top","right","left","borderBottomWidth","borderTopWidth","borderRightWidth","borderLeftWidth","borderTopColor","base","background","app","borderBottomColor","borderLeftColor","borderRightColor","Wrapper","display","hidden","zIndex","hasChrome","filter","borderRadius","appBorderRadius","fontSize","typography","size","s1","_ref5","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","from","test","_nonIterableRest","TypeError","len","arr2","_taggedTemplateLiteral","strings","raw","freeze","defineProperties","displayName","TargetContainer","mode","TargetSvgContainer","WithTooltipPure","svg","closeOnClick","_tooltip","Container","tooltipPlacement","onHide","padding","offset","WithToolTipState","startOpen","onChange","rest","_useState2","useState","setTooltipShown","useCallback","visibility","useEffect","iframes","getElementsByTagName","unbinders","iframe","bind","contentWindow","e","unbind"],"sourceRoot":""}